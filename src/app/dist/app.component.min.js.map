{"version":3,"sources":["app.component.ts"],"names":["core_1","require","rxjs_1","core_2","AppComponent","route","this","countDown","Subscription","counter","tick","isadmin","isMenuVisible","sessionStorage","getItem","prototype","ngDoCheck","currentroute","url","role","ngOnInit","_this","timer","subscribe","__decorate","Component","selector","templateUrl","styleUrls","exports","FormatTimePipe","transform","value","hours","Math","floor","minutes","slice","Pipe","name"],"mappings":"6YAAA,IAAAA,OAAAC,QAAA,iBAIAC,OAAAD,QAAA,QACAE,OAAAF,QAAA,iBAMAG,aAAA,WAOE,SAAAA,EAAoBC,GAAAC,KAAAD,MAAAA,EANpBC,KAAAC,UAA0B,IAAIL,OAAAM,aAC9BF,KAAAG,QAAU,KACVH,KAAAI,KAAO,IACPJ,KAAAK,SAAQ,EACRL,KAAAM,eAAc,EAIH,SADAC,eAAeC,QAAQ,UAE9BR,KAAKK,SAAQ,GAyBnB,OAtBEP,EAAAW,UAAAC,UAAA,WACE,IAAIC,EAAeX,KAAKD,MAAMa,IAC1BC,EAAKN,eAAeC,QAAQ,QAE9BR,KAAKM,cADa,UAAhBK,GAA4C,aAAhBA,EAO9BX,KAAKK,QADK,SAARQ,GAONf,EAAAW,UAAAK,SAAA,WAAA,IAAAC,EAAAf,KACEA,KAAKC,UAAYL,OAAAoB,MAAM,EAAGhB,KAAKI,MAAMa,UAAU,WAAM,QAAEF,EAAKZ,WA9BnDL,EAAYoB,WAAA,CALxBxB,OAAAyB,UAAU,CACTC,SAAU,WACVC,YAAa,uBACbC,UAAW,CAAC,0BAEDxB,GAAb,GAAayB,QAAAzB,aAAAA,aAuCb,IAAA0B,eAAA,WAAA,SAAAA,KAYA,OAXEA,EAAAf,UAAAgB,UAAA,SAAUC,GACR,IAAMC,EAAgBC,KAAKC,MAAMH,EAAQ,MACnCI,EAAkBF,KAAKC,MAAOH,EAAQ,KAAQ,IACpD,OACG,KAAOC,GAAOI,OAAO,GACtB,KACC,KAAOD,GAASC,OAAO,GACxB,KACC,KAAOH,KAAKC,MAAMH,EAAkB,GAAVI,IAAeC,OAAO,IAT1CP,EAAcN,WAAA,CAH1BrB,OAAAmC,KAAK,CACJC,KAAM,gBAEKT,GAAb,GAAaD,QAAAC,eAAAA","file":"app.component.min.js","sourcesContent":["import { Component,DoCheck,OnInit,OnDestroy} from '@angular/core';\r\nimport { Breakpoints, BreakpointObserver, BreakpointState } from '@angular/cdk/layout';\r\nimport { Router,Route, Event, NavigationStart, NavigationEnd, NavigationCancel,ActivatedRoute, NavigationError } from '@angular/router';\r\nimport { Observable,  } from 'rxjs';\r\nimport { timer, Subscription } from \"rxjs\";\r\nimport { Pipe, PipeTransform } from \"@angular/core\";\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements DoCheck,OnInit {\r\n  countDown: Subscription = new Subscription;\r\n  counter = 1800;\r\n  tick = 1000;\r\n  isadmin=false;\r\n  isMenuVisible=false;\r\n\r\n  constructor(private route:Router){\r\n    let role=sessionStorage.getItem('role');\r\n    if(role=='admin'){\r\n      this.isadmin=true;\r\n    }\r\n  }\r\n  ngDoCheck(): void {\r\n    let currentroute = this.route.url;\r\n    let role=sessionStorage.getItem('role');\r\n    if (currentroute == '/login' || currentroute == '/register') {\r\n      this.isMenuVisible = false\r\n    } else {\r\n      this.isMenuVisible = true\r\n    }\r\n\r\n    if (role == 'admin') {\r\n      this.isadmin = true;\r\n    }else{\r\n      this.isadmin = false;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.countDown = timer(0, this.tick).subscribe(() => --this.counter);\r\n  }\r\n  // ngOnDestroy(){\r\n  //   this.countDown=null;\r\n  // }\r\n}\r\n@Pipe({\r\n  name: \"formatTime\"\r\n})\r\nexport class FormatTimePipe implements PipeTransform {\r\n  transform(value: number): string {\r\n    const hours: number = Math.floor(value / 3600);\r\n    const minutes: number = Math.floor((value % 3600) / 60);\r\n    return (\r\n      (\"00\" + hours).slice(-2) +\r\n      \":\" +\r\n      (\"00\" + minutes).slice(-2) +\r\n      \":\" +\r\n      (\"00\" + Math.floor(value - minutes * 60)).slice(-2)\r\n    );\r\n  }\r\n}\r\n"]}