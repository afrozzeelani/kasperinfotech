{"version":3,"sources":["app.component.ts"],"names":[],"mappings":";;;;;;;;AAAA,sCAAkE;AAIlE,6BAA2C;AAC3C,sCAAoD;AAMpD;IAOE,sBAAoB,KAAY;QAAZ,UAAK,GAAL,KAAK,CAAO;QANhC,cAAS,GAAiB,IAAI,mBAAY,CAAC;QAC3C,YAAO,GAAG,IAAI,CAAC;QACf,SAAI,GAAG,IAAI,CAAC;QACZ,YAAO,GAAC,KAAK,CAAC;QACd,kBAAa,GAAC,KAAK,CAAC;QAGlB,IAAI,IAAI,GAAC,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACxC,IAAG,IAAI,IAAE,OAAO,EAAC;YACf,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC;SACnB;IACH,CAAC;IACD,gCAAS,GAAT;QACE,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;QAClC,IAAI,IAAI,GAAC,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACxC,IAAI,YAAY,IAAI,QAAQ,IAAI,YAAY,IAAI,WAAW,EAAE;YAC3D,IAAI,CAAC,aAAa,GAAG,KAAK,CAAA;SAC3B;aAAM;YACL,IAAI,CAAC,aAAa,GAAG,IAAI,CAAA;SAC1B;QAED,IAAI,IAAI,IAAI,OAAO,EAAE;YACnB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACrB;aAAI;YACH,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;SACtB;IACH,CAAC;IAED,+BAAQ,GAAR;QAAA,iBAEC;QADC,IAAI,CAAC,SAAS,GAAG,YAAK,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,cAAM,OAAA,EAAE,KAAI,CAAC,OAAO,EAAd,CAAc,CAAC,CAAC;IACvE,CAAC;IA/BU,YAAY;QALxB,gBAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,WAAW,EAAE,sBAAsB;YACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;SACnC,CAAC;OACW,YAAY,CAmCxB;IAAD,mBAAC;CAnCD,AAmCC,IAAA;AAnCY,oCAAY;AAuCzB;IAAA;IAYA,CAAC;IAXC,kCAAS,GAAT,UAAU,KAAa;QACrB,IAAM,KAAK,GAAW,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;QAC/C,IAAM,OAAO,GAAW,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;QACxD,OAAO,CACL,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACxB,GAAG;YACH,CAAC,IAAI,GAAG,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC1B,GAAG;YACH,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CACpD,CAAC;IACJ,CAAC;IAXU,cAAc;QAH1B,WAAI,CAAC;YACJ,IAAI,EAAE,YAAY;SACnB,CAAC;OACW,cAAc,CAY1B;IAAD,qBAAC;CAZD,AAYC,IAAA;AAZY,wCAAc","file":"app.component.js","sourcesContent":["import { Component,DoCheck,OnInit,OnDestroy} from '@angular/core';\r\nimport { Breakpoints, BreakpointObserver, BreakpointState } from '@angular/cdk/layout';\r\nimport { Router,Route, Event, NavigationStart, NavigationEnd, NavigationCancel,ActivatedRoute, NavigationError } from '@angular/router';\r\nimport { Observable,  } from 'rxjs';\r\nimport { timer, Subscription } from \"rxjs\";\r\nimport { Pipe, PipeTransform } from \"@angular/core\";\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements DoCheck,OnInit {\r\n  countDown: Subscription = new Subscription;\r\n  counter = 1800;\r\n  tick = 1000;\r\n  isadmin=false;\r\n  isMenuVisible=false;\r\n\r\n  constructor(private route:Router){\r\n    let role=sessionStorage.getItem('role');\r\n    if(role=='admin'){\r\n      this.isadmin=true;\r\n    }\r\n  }\r\n  ngDoCheck(): void {\r\n    let currentroute = this.route.url;\r\n    let role=sessionStorage.getItem('role');\r\n    if (currentroute == '/login' || currentroute == '/register') {\r\n      this.isMenuVisible = false\r\n    } else {\r\n      this.isMenuVisible = true\r\n    }\r\n\r\n    if (role == 'admin') {\r\n      this.isadmin = true;\r\n    }else{\r\n      this.isadmin = false;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.countDown = timer(0, this.tick).subscribe(() => --this.counter);\r\n  }\r\n  // ngOnDestroy(){\r\n  //   this.countDown=null;\r\n  // }\r\n}\r\n@Pipe({\r\n  name: \"formatTime\"\r\n})\r\nexport class FormatTimePipe implements PipeTransform {\r\n  transform(value: number): string {\r\n    const hours: number = Math.floor(value / 3600);\r\n    const minutes: number = Math.floor((value % 3600) / 60);\r\n    return (\r\n      (\"00\" + hours).slice(-2) +\r\n      \":\" +\r\n      (\"00\" + minutes).slice(-2) +\r\n      \":\" +\r\n      (\"00\" + Math.floor(value - minutes * 60)).slice(-2)\r\n    );\r\n  }\r\n}\r\n"]}